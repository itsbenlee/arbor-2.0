%script{src: "http://code.jquery.com/jquery-1.7.1.min.js"}
%script{src: "//api.trello.com/1/client.js?key=#{ENV['TRELLO_DEVELOPER_PUBLIC_KEY']}"}

%nav.secondary-nav
  %ul.left
    %li.not-ready
      = link_to t('reloaded.navigation.canvas'), arbor_reloaded_project_canvases_path(current_project), class: 'link'
    %li
      = active_link_to t('reloaded.navigation.backlog'), arbor_reloaded_project_user_stories_path(current_project), class: 'link'
    %li
      = active_link_to t('reloaded.navigation.activity'), log_arbor_reloaded_project_path(current_project), class: 'link'
    %li.not-ready
      = link_to t('reloaded.navigation.assets'), arbor_reloaded_project_attachments_path(current_project), class: 'link'
    %li
      = link_to '...', '#', aria: { controls: 'project-actions', expanded: false }, data: {dropdown: 'project-actions' }
      %ul#project-actions.f-dropdown{ data: { dropdown: { content: '' } } }
        %li
          = link_to arbor_reloaded_project_export_backlog_path(current_project, format: :pdf, estimation: true) do
            = t('reloaded.navigation.export_with_estimation')
            %span.icn-export
        %li
          = link_to arbor_reloaded_project_export_backlog_path(current_project, format: :pdf, estimation: false) do
            = t('reloaded.navigation.export_without_estimation')
            %span.icn-export
        %li
          = link_to arbor_reloaded_project_copy_path(current_project), method: :post, class: 'copy-project' do
            = t('project.copy_project')
            %span.icn-copy
        .hidden-element
          - if current_user.trello_token
            .authorized-trello-links
              = render 'arbor_reloaded/trello/authorized_links', project: current_project
          - else
            %li
              = link_to '#', { id: 'trello_export_link', class: 'copy-project', data: { url: arbor_reloaded_project_trello_index_path(current_project) } } do
                = t('trello.new_board')
                %span.icn-copy
            %li
              = link_to '#', { id: 'trello_export_existing_board_link', class: 'copy-project', data: { url: arbor_reloaded_project_trello_index_path(current_project) } } do
                = t('trello.existing_board')
                %span.icn-copy
        %li
          = react_component('SlackButton', {}, {prerender: false})
        - if current_user == current_project.owner
          %li
            = link_to arbor_reloaded_project_path(current_project), method: :delete, data: { confirm: t('project.delete_confirmation') } do
              = t('project.delete_project')
              %span.icn-delete
  %ul.right.members
    %li
      = link_to '+', |
      arbor_reloaded_project_members_path(current_project), |
      { class: 'add-member has-tip', data: { reveal_id: 'project-members-modal', reveal_ajax: true, tooltip: '' }, aria: { haspopup: true }, title: t('reloaded.tooltips.add_members') }
    - current_project.members.each_with_index do |member, index|
      - if index < 3
        %li
          = link_to arbor_reloaded_project_members_path(current_project), { data: { reveal_id: 'project-members-modal', reveal_ajax: true }} do
            -  if member.avatar?
              .avatar-img{ style: "background-image: url(#{member.avatar_url})" }
            - else
              = image_tag(member.gravatar_url, class: 'avatar-img', onerror: "this.src=''")
              .avatar-circle#avatar-circle= user_initial(member)
    - if current_project.members.count > 3
      %li
        = link_to arbor_reloaded_project_members_path(current_project),{ data: { reveal_id: 'project-members-modal', reveal_ajax: true }}, class: 'other-members' do
          +
          = current_project.members.count - 3
    -# TODO this link should only appear if the user is not a member of this project, and should't see the plus and members items, MOJO {remove .hidden-element for enable it}
    %li= link_to t('reloaded.project_dashboard.join_project'), '#', class: 'button radius success tiny join-btn hidden-element'
#project-members-modal.reveal-modal{ data: { reveal: '' } }
%div
  = react_component('SlackModal', { url: arbor_reloaded_project_path(current_project), slackToken: current_project.slack_token, slackChannelId: current_project.slack_channel_id }, {prerender: false})
