= form_for user_story, html: { class: user_story.new_record? ? 'new-story new_user_story' : 'edit-story edit_user_story' }, url: form_url do |form|
  -if user_story.errors.any?
    .alert-box.alert.user_story_errors
      %ul
        - user_story.errors.full_messages.each do |error|
          %li= error
  %span.square
  %span.icon-edit
  .user-story-input.columns.role
    = t('backlog.user_stories.role')
    = form.text_field(                                   |
      :role,                                             |
      placeholder: t('backlog.user_stories.enter_role'), |
      required:    true,                                 |
      maxlength:   100,                                  |
      class:      'role'                                 |
    )                                                    |
  .user-story-input.column.action
    = t('backlog.user_stories.action_prefix')
    .user-story-priority
      %p= user_story.priority
    = t('backlog.user_stories.action_suffix')
    = form.text_field(                                     |
      :action,                                             |
      placeholder: t('backlog.user_stories.enter_action'), |
      required:    true,                                   |
      maxlength:   255,                                    |
      class:      'action'                                 |
    )                                                      |
  .user-story-input.columns.result
    = t('backlog.user_stories.result')
    = form.text_field(                                     |
      :result,                                             |
      placeholder: t('backlog.user_stories.enter_result'), |
      required:    true,                                   |
      maxlength:   255,                                    |
      class:      'result'                                 |
    )                                                      |
  .estimation.user-story-input.large-5.columns
    = form.label 'Estimation points'
    = form.select :estimated_points, UserStory.estimation_series
  .priority.user-story-input.large-7.columns
    = form.label 'Priority'
    = form.select :priority, UserStory::PRIORITIES
  - if hypothesis
    = form.hidden_field :hypothesis_id, value: hypothesis.id
  = form.submit I18n.translate('save'), class: 'hide user-story-submit'
  .epic.user-story-input.large-12.columns
    = form.check_box :epic
    = form.label 'Epic'
- unless user_story.new_record?
  .acceptance-criterion-form
    = render 'acceptance_criterions/new', user_story: user_story
    - user_story.acceptance_criterions.each do |acceptance_criterion|
      = render 'acceptance_criterions/edit', user_story: user_story, acceptance_criterion: acceptance_criterion
  .constraint-form
    = render 'constraints/new', user_story: user_story
    - user_story.constraints.each do |constraint|
      = render 'constraints/edit', user_story: user_story, constraint: constraint
